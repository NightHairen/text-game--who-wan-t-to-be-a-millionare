#include <iostream>
#include <time.h> 
#include <stdlib.h>
#include <windows.h>
using namespace std;
void ctOS_SystemLogoff() {
    system("cls");
    for (int i = 0; i < 2; i++);
    {
        cout << "\n@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@";
    }
    cout << "\n@@@@@@@@@@@@@@@@@@@@@@@@@@=---------------------------------------=@@@@@@@@@@@@@@@@@@@@@@";
    cout << "\n@@@@@@@@@@@@@@@@@@@@@@@@@@-                                       -@@@@@@@@@@@@@@@@@@@@@@";
    cout << "\n@@@@@@@@@@@@@@@@@@@@@@@@@@=---------------------------------------=@@@@@@@@@@@@@@@@@@@@@@";
    cout << "\n@@@@@@@@@@@@@@@@@@@@@@@@@@=---------------------------------------=@@@@@@@@@@@@@@@@@@@@@@";
    cout << "\n@@@@@@@@@@@@@@@@@@@@@@@@@@-                                       -@@@@@@@@@@@@@@@@@@@@@@";
    cout << "\n@@@@@@@@@@@@@@@@@@@@@@@@@@=---------------------------------------=@@@@@@@@@@@@@@@@@@@@@@";
    cout << "\n@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@";
    cout << "\n@@@@@@@@@@@@@@@@@@@@@@@@@@        S y s t e m   L o g o f f        @@@@@@@@@@@@@@@@@@@@@@";
    cout << "\n@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@";
    cout << "\n@@@@@@@@@@@@@@@@@@@@@@@@@@=.......................................=@@@@@@@@@@@@@@@@@@@@@@";
    cout << "\n@@@@@@@@@@@@@@@@@@@@@@@@@@-               c t O S                 -@@@@@@@@@@@@@@@@@@@@@@";
    cout << "\n@@@@@@@@@@@@@@@@@@@@@@@@@@=.......................................=@@@@@@@@@@@@@@@@@@@@@@";
    for (int i = 0; i < 8; i++);
    {
        cout << "\n@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@";
    }
    Sleep(700);
    {
        cout << "\n@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@";
    }
    cout << "\n@@@@@@@@@@@@@@@@@@@@@@@@@@=----------------------------------=@@@@@@@@@@@@@@@@@@@@@@@@@@@";
    cout << "\n@@@@@@@@@@@@@@@@@@@@@@@@@@-                                  -@@@@@@@@@@@@@@@@@@@@@@@@@@@";
    cout << "\n@@@@@@@@@@@@@@@@@@@@@@@@@@=----------------------------------=@@@@@@@@@@@@@@@@@@@@@@@@@@@";
    cout << "\n@@@@@@@@@@@@@@@@@@@@@@@@@@=------------------------------------=@@@@@@@@@@@@@@@@@@@@@@@@@";
    cout << "\n@@@@@@@@@@@@@@@@@@@@@@@@@@-                                    -@@@@@@@@@@@@@@@@@@@@@@@@@";
    cout << "\n@@@@@@@@@@@@@@@@@@@@@@@@@@=------------------------------------=@@@@@@@@@@@@@@@@@@@@@@@@@";
    cout << "\n@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@";
    cout << "\n@@@@@@@@@@@@@@@@@@@@@@@@@@        S y s t e m   L o g o f f        @@@@@@@@@@@@@@@@@@@@@@";
    cout << "\n@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@";
    cout << "\n@@@@@@@@@@@@@@@@@@@@@@@@@@=................................=@@@@@@@@@@@@@@@@@@@@@@@@@@@@@";
    cout << "\n@@@@@@@@@@@@@@@@@@@@@@@@@@-                                -@@@@@@@@@@@@@@@@@@@@@@@@@@@@@";
    cout << "\n@@@@@@@@@@@@@@@@@@@@@@@@@@=................................=@@@@@@@@@@@@@@@@@@@@@@@@@@@@@";
    for (int i = 0; i < 8; i++);
    {
        cout << "\n@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@";
    }
    Sleep(700);
    {
        cout << "\n@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@";
    }
    cout << "\n@@@@@@@@@@@@@@@@@@@@@@@@@@=-------------------------=@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@";
    cout << "\n@@@@@@@@@@@@@@@@@@@@@@@@@@-                         -@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@";
    cout << "\n@@@@@@@@@@@@@@@@@@@@@@@@@@=-------------------------=@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@";
    cout << "\n@@@@@@@@@@@@@@@@@@@@@@@@@@=---------------------=@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@";
    cout << "\n@@@@@@@@@@@@@@@@@@@@@@@@@@-                     -@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@";
    cout << "\n@@@@@@@@@@@@@@@@@@@@@@@@@@=---------------------=@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@";
    cout << "\n@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@";
    cout << "\n@@@@@@@@@@@@@@@@@@@@@@@@@@        S y s t e m   L o g o f f        @@@@@@@@@@@@@@@@@@@@@@";
    cout << "\n@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@";
    cout << "\n@@@@@@@@@@@@@@@@@@@@@@@@@@=..............................=@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@";
    cout << "\n@@@@@@@@@@@@@@@@@@@@@@@@@@-                              -@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@";
    cout << "\n@@@@@@@@@@@@@@@@@@@@@@@@@@=..............................=@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@";
    for (int i = 0; i < 8; i++);
    {
        cout << "\n@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@";
    }
    Sleep(700);
    {
        cout << "\n@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@";
    }
    cout << "\n@@@@@@@@@@@@@@@@@@@@@@@@@@=--------=@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@";
    cout << "\n@@@@@@@@@@@@@@@@@@@@@@@@@@-        -@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@";
    cout << "\n@@@@@@@@@@@@@@@@@@@@@@@@@@=--------=@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@";
    cout << "\n@@@@@@@@@@@@@@@@@@@@@@@@@@=----------------=@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@";
    cout << "\n@@@@@@@@@@@@@@@@@@@@@@@@@@-                -@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@";
    cout << "\n@@@@@@@@@@@@@@@@@@@@@@@@@@=----------------=@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@";
    cout << "\n@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@";
    cout << "\n@@@@@@@@@@@@@@@@@@@@@@@@@@        S y s t e m   L o g o f f        @@@@@@@@@@@@@@@@@@@@@@";
    cout << "\n@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@";
    cout << "\n@@@@@@@@@@@@@@@@@@@@@@@@@@=.......................=@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@";
    cout << "\n@@@@@@@@@@@@@@@@@@@@@@@@@@-                       -@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@";
    cout << "\n@@@@@@@@@@@@@@@@@@@@@@@@@@=.......................=@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@";
    for (int i = 0; i < 8; i++);
    {
        cout << "\n@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@";
    }
    Sleep(2000);
};
void ctOS_ConnectionError() {
    Sleep(700);
    cout << "\n@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@";
    cout << "\n@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@#*********###*********#@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@";
    cout << "\n@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@#+=+#@@@@@@@@@@@@@@@@@@@@@%+==#@@@@@@@@@@@@@@@@@@@@@@@@@@@@@";
    cout << "\n@@@@@@@@@@@@@@@@@@@@@@@@@@@*+*#@@@@@@@@@@@@@@@@@@@@@@@@@@@@@%*++%@@@@@@@@@@@@@@@@@@@@@@@@@";
    cout << "\n@@@@@@@@@@@@@@@@@@@@@@@@*+*@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@#+*%@@@@@@@@@@@@@@@@@@@@@@";
    cout << "\n@@@@@@@@@@@@@@@@@@@@@%++%@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@*+*@@@@@@@@@@@@@@@@@@@@";
    cout << "\n@@@@@@@@@@@@@@@@@@@@++@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@#-@@@@@@@@@@@@@@@@@@@";
    cout << "\n@@@@@@@@@@@@@@@@@@%=%@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@+*@@@@@@@@@@@@@@@@@";
    cout << "\n@@@@@@@@@@@@@@@@@++@@@@@@@@#-@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@=#@@@@@@@@#=@@@@@@@@@@@@@@@@";
    cout << "\n@@@@@@@@@@@@@@@@=#@@@@@@@@@*:-@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@+:*@@@@@@@@@@-%@@@@@@@@@@@@@@";
    cout << "\n@@@@@@@@@@@@@@%.#@@@@@@@@@@*==:@@@@@@@@@@@@@@@@@@@@@@@@@@@@@+-++@@@@@@@@@@@.#@@@@@@@@@@@@@";
    cout << "\n@@@@@@@@@@@@@@-%@@@@@@@@@@@*=@=-@@@@@@@@@@@@@#%@@@@@@@@@@@@+:@++@@@@@@@@@@@@-%@@@@@@@@@@@@";
    cout << "\n@@@@@@@@@@@@@=#@@@@@@@@@@@@*=@@++@@@@@@@@@@%-+=*@@@@@@@@@@#-@@++@@@@@@@@@@@@@-@@@@@@@@@@@@";
    cout << "\n@@@@@@@@@@@@%-@@@@@@@@@@@@@*=@@@-#@@@@@@@@*=@@@*=@@@@@@@@%:@@@++@@@@@@@@@@@@@**@@@@@@@@@@@";
    cout << "\n@@@@@@@@@@@@+#@@@@@@@@@@@@@*=@@@@.@@@@@@@+=@@@@@%:@@@@@@@:%@@@++@@@@@@@@@@@@@@:@@@@@@@@@@@";
    cout << "\n@@@@@@@@@@@@:@@@@@@@@@@@@@@*=@@@@#-@@@@@=*@@@@@@@%-#@@@@++@@@@++@@@@@@@@@@@@@@-@@@@@@@@@@@";
    cout << "\n@@@@@@@@@@@@:@@@@@@@@@@@@@@*=@@@@@+=@@%-%@@@@@@@@@@=-%@*-@@@@@++@@@@@@@@@@@@@@+#@@@@@@@@@@";
    cout << "\n@@@@@@@@@@@@:@@@@@@@@@@@@@@*=@@@@@@:#+:@@@@@@@@@@@@@%:#.@@@@@@++@@@@@@@@@@@@@@+*@@@@@@@@@@";
    cout << "\n@@@@@@@@@@@@:@@@@@@@@@@@@@@*=@@@@@@# +@@@@@@@@@@@@@@@@ +@@@@@@++@@@@@@@@@@@@@@+#@@@@@@@@@@";
    cout << "\n@@@@@@@@@@@@:@@@@@@@@@@@@@@*=@@@@@*-* %@@@@@@@@@@@@@@+++=@@@@@++@@@@@@@@@@@@@@=@@@@@@@@@@@";
    cout << "\n@@@@@@@@@@@@=%@@@@@@@@@@@@@*=@@@@=+@@%:@@@@@@@@@@@@@#:@@%-%@@@++@@@@@@@@@@@@@@:@@@@@@@@@@@";
    cout << "\n@@@@@@@@@@@@#=@@@@@@@@@@@@@*=@@@:-++++-:++++++++++++ -+++= #@@++@@@@@@@@@@@@@#+@@@@@@@@@@@";
    cout << "\n@@@@@@@@@@@@@-@@@@@@@@@@@@@*=@*-#%%%%%%-*%%%%%%%%%%.#%%%%%%==@++@@@@@@@@@@@@@-@@@@@@@@@@@@";
    cout << "\n@@@@@@@@@@@@@%-@@@@@@@@@@@@*--*@@@@@@@@@:%@@@@@@@@=*@@@@@@@@%--+@@@@@@@@@@@@**@@@@@@@@@@@@";
    cout << "\n@@@@@@@@@@@@@@*:%@@@@@@@@@@%+@@@@@@@@@@@%:@@@@@@@#-@@@@@@@@@@@*#@@@@@@@@@@@+=@@@@@@@@@@@@@";
    cout << "\n@@@@@@@@@@@@@@@%-@@@@@@@@@@@@@@@@@@@@@@@@++@@@@@@.@@@@@@@@@@@@@@@@@@@@@@@@=+@@@@@@@@@@@@@@";
    cout << "\n@@@@@@@@@@@@@@@@%-@@@@@@@@@@@@@@@@@@@@@@@@:%@@@@=*@@@@@@@@@@@@@@@@@@@@@@@=#@@@@@@@@@@@@@@@";
    cout << "\n@@@@@@@@@@@@@@@@@@=*@@@@@@@@@@@@@@@@@@@@@@@:@@@#-@@@@@@@@@@@@@@@@@@@@@@%=%@@@@@@@@@@@@@@@@";
    cout << "\n@@@@@@@@@@@@@@@@@@@#=%@@@@@@@@@@@@@@@@@@@@@#-@@:@@@@@@@@@@@@@@@@@@@@@@++@@@@@@@@@@@@@@@@@@";
    cout << "\n@@@@@@@@@@@@@@@@@@@@@+-%@@@@@@@@@@@@@@@@@@@@+:-#@@@@@@@@@@@@@@@@@@@@*-@@@@@@@@@@@@@@@@@@@@";
    cout << "\n@@@@@@@@@@@@@@@@@@@@@@@*+#@@@@@@@@@@@@@@@@@@@+*@@@@@@@@@@@@@@@@@@%++#@@@@@@@@@@@@@@@@@@@@@";
    cout << "\n@@@@@@@@@@@@@@@@@@@@@@@@@%++#@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@%*+#@@@@@@@@@@@@@@@@@@@@@@@@";
    cout << "\n@@@@@@@@@@@@@@@@@@@@@@@@@@@@#==*@@@@@@@@@@@@@@@@@@@@@@@@@@@#==*@@@@@@@@@@@@@@@@@@@@@@@@@@@";
    cout << "\n@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@%*****#%@@@@@@@@@@@@@@%#****%@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@";
    cout << "\n@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@%#*************##@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@";
    cout << "\n@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@";
    Sleep(1000);
    system("cls");
    for (int i = 0; i < 8; i++);
    {
        cout << "\n@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@";
    }
    cout << "\n@@@@@@@@@@@@@@@@@@@@@@@@@@=--------------------------------------=@@@@@@@@@@@@@@@@@@@@@@@";
    cout << "\n@@@@@@@@@@@@@@@@@@@@@@@@@@-                                      -@@@@@@@@@@@@@@@@@@@@@@@";
    cout << "\n@@@@@@@@@@@@@@@@@@@@@@@@@@=--------------------------------------=@@@@@@@@@@@@@@@@@@@@@@@";
    cout << "\n@@@@@@@@@@@@@@@@@@@@@@@@@@=--------------------------------------=@@@@@@@@@@@@@@@@@@@@@@@";
    cout << "\n@@@@@@@@@@@@@@@@@@@@@@@@@@-                                      -@@@@@@@@@@@@@@@@@@@@@@@";
    cout << "\n@@@@@@@@@@@@@@@@@@@@@@@@@@=--------------------------------------=@@@@@@@@@@@@@@@@@@@@@@@";
    cout << "\n@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@";
    cout << "\n@@@@@@@@@@@@@@@@@@@@@@@@@@     C o n n e c t i o n   l o s t      @@@@@@@@@@@@@@@@@@@@@@@";
    cout << "\n@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@";
    cout << "\n@@@@@@@@@@@@@@@@@@@@@@@@@@=......................................=@@@@@@@@@@@@@@@@@@@@@@@";
    cout << "\n@@@@@@@@@@@@@@@@@@@@@@@@@@-               c t O S                -@@@@@@@@@@@@@@@@@@@@@@@";
    cout << "\n@@@@@@@@@@@@@@@@@@@@@@@@@@=......................................=@@@@@@@@@@@@@@@@@@@@@@@";
    for (int i = 0; i < 8; i++);
    {
        cout << "\n@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@";
    }
    Sleep(2000);
    system("cls");
    for (int i = 0; i < 8; i++);
    {
        cout << "\n@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@";
    }
    cout << "\n@@@@@@@@@@@@@@@@@@@@@@@@@@=--------------------------------------=@@@@@@@@@@@@@@@@@@@@@@@";
    cout << "\n@@@@@@@@@@@@@@@@@@@@@@@@@@-                                      -@@@@@@@@@@@@@@@@@@@@@@@";
    cout << "\n@@@@@@@@@@@@@@@@@@@@@@@@@@=--------------------------------------=@@@@@@@@@@@@@@@@@@@@@@@";
    cout << "\n@@@@@@@@@@@@@@@@@@@@@@@@@@=--------------------------------------=@@@@@@@@@@@@@@@@@@@@@@@";
    cout << "\n@@@@@@@@@@@@@@@@@@@@@@@@@@-                                      -@@@@@@@@@@@@@@@@@@@@@@@";
    cout << "\n@@@@@@@@@@@@@@@@@@@@@@@@@@=--------------------------------------=@@@@@@@@@@@@@@@@@@@@@@@";
    cout << "\n@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@";
    cout << "\n@@@@@@@@@@@@@@@@@@@@@@@@@@          R e c o n n e c t e d         @@@@@@@@@@@@@@@@@@@@@@@";
    cout << "\n@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@";
    cout << "\n@@@@@@@@@@@@@@@@@@@@@@@@@@=......................................=@@@@@@@@@@@@@@@@@@@@@@@";
    cout << "\n@@@@@@@@@@@@@@@@@@@@@@@@@@-               c t O S                -@@@@@@@@@@@@@@@@@@@@@@@";
    cout << "\n@@@@@@@@@@@@@@@@@@@@@@@@@@=......................................=@@@@@@@@@@@@@@@@@@@@@@@";
    for (int i = 0; i < 8; i++);
    {
        cout << "\n@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@";
    }
    Sleep(2300);
    system("cls");
};
void ctOS_LogonUI() {
    system("cls");
    for (int i = 0; i < 5; i++);
    {
        cout << "\n@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@";
    }
    cout << "\n@@@@@@@@@@@@@@@@@@@@@@@@@@=-----=@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@";
    cout << "\n@@@@@@@@@@@@@@@@@@@@@@@@@@-     -@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@";
    cout << "\n@@@@@@@@@@@@@@@@@@@@@@@@@@=-----=@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@";
    cout << "\n@@@@@@@@@@@@@@@@@@@@@@@@@@=---------------------=@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@";
    cout << "\n@@@@@@@@@@@@@@@@@@@@@@@@@@-                     -@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@";
    cout << "\n@@@@@@@@@@@@@@@@@@@@@@@@@@=---------------------=@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@";
    cout << "\n@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@";
    cout << "\n@@@@@@@@@@@@@@@@@@@@@@@@@@       S y s t e m   l o a d i n g      @@@@@@@@@@@@@@@@@@@@@@@";
    cout << "\n@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@";
    cout << "\n@@@@@@@@@@@@@@@@@@@@@@@@@@=...............................=@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@";
    cout << "\n@@@@@@@@@@@@@@@@@@@@@@@@@@-                               -@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@";
    cout << "\n@@@@@@@@@@@@@@@@@@@@@@@@@@=...............................=@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@";
    for (int i = 0; i < 8; i++);
    {
        cout << "\n@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@";
    }
    Sleep(700);
    system("cls");
    for (int i = 0; i < 5; i++);
    {
        cout << "\n@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@";
    }
    cout << "\n@@@@@@@@@@@@@@@@@@@@@@@@@@=---------=@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@";
    cout << "\n@@@@@@@@@@@@@@@@@@@@@@@@@@-         -@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@";
    cout << "\n@@@@@@@@@@@@@@@@@@@@@@@@@@=---------=@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@";
    cout << "\n@@@@@@@@@@@@@@@@@@@@@@@@@@=-------------------------=@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@";
    cout << "\n@@@@@@@@@@@@@@@@@@@@@@@@@@-                         -@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@";
    cout << "\n@@@@@@@@@@@@@@@@@@@@@@@@@@=-------------------------=@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@";
    cout << "\n@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@";
    cout << "\n@@@@@@@@@@@@@@@@@@@@@@@@@@       S y s t e m   l o a d i n g      @@@@@@@@@@@@@@@@@@@@@@@";
    cout << "\n@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@";
    cout << "\n@@@@@@@@@@@@@@@@@@@@@@@@@@=...................................=@@@@@@@@@@@@@@@@@@@@@@@@@@";
    cout << "\n@@@@@@@@@@@@@@@@@@@@@@@@@@-                                   -@@@@@@@@@@@@@@@@@@@@@@@@@@";
    cout << "\n@@@@@@@@@@@@@@@@@@@@@@@@@@=...................................=@@@@@@@@@@@@@@@@@@@@@@@@@@";
    for (int i = 0; i < 8; i++);
    {
        cout << "\n@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@";
    }
    Sleep(700);
    system("cls");
    for (int i = 0; i < 5; i++);
    {
        cout << "\n@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@";
    }
    cout << "\n@@@@@@@@@@@@@@@@@@@@@@@@@@=----------------------=@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@";
    cout << "\n@@@@@@@@@@@@@@@@@@@@@@@@@@-                      -@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@";
    cout << "\n@@@@@@@@@@@@@@@@@@@@@@@@@@=----------------------=@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@";
    cout << "\n@@@@@@@@@@@@@@@@@@@@@@@@@@=----------------------------=@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@";
    cout << "\n@@@@@@@@@@@@@@@@@@@@@@@@@@-                            -@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@";
    cout << "\n@@@@@@@@@@@@@@@@@@@@@@@@@@=----------------------------=@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@";
    cout << "\n@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@";
    cout << "\n@@@@@@@@@@@@@@@@@@@@@@@@@@       S y s t e m   l o a d i n g      @@@@@@@@@@@@@@@@@@@@@@@";
    cout << "\n@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@";
    cout << "\n@@@@@@@@@@@@@@@@@@@@@@@@@@=...................................=@@@@@@@@@@@@@@@@@@@@@@@@@@";
    cout << "\n@@@@@@@@@@@@@@@@@@@@@@@@@@-                                   -@@@@@@@@@@@@@@@@@@@@@@@@@@";
    cout << "\n@@@@@@@@@@@@@@@@@@@@@@@@@@=...................................=@@@@@@@@@@@@@@@@@@@@@@@@@@";
    for (int i = 0; i < 8; i++);
    {
        cout << "\n@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@";
    }
    Sleep(700);
    system("cls");
    for (int i = 0; i < 5; i++);
    {
        cout << "\n@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@";
    }
    cout << "\n@@@@@@@@@@@@@@@@@@@@@@@@@@=-----------------------------=@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@";
    cout << "\n@@@@@@@@@@@@@@@@@@@@@@@@@@-                             -@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@";
    cout << "\n@@@@@@@@@@@@@@@@@@@@@@@@@@=-----------------------------=@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@";
    cout << "\n@@@@@@@@@@@@@@@@@@@@@@@@@@=------------------------------------=@@@@@@@@@@@@@@@@@@@@@@@@@";
    cout << "\n@@@@@@@@@@@@@@@@@@@@@@@@@@-                                    -@@@@@@@@@@@@@@@@@@@@@@@@@";
    cout << "\n@@@@@@@@@@@@@@@@@@@@@@@@@@=------------------------------------=@@@@@@@@@@@@@@@@@@@@@@@@@";
    cout << "\n@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@";
    cout << "\n@@@@@@@@@@@@@@@@@@@@@@@@@@       S y s t e m   l o a d i n g      @@@@@@@@@@@@@@@@@@@@@@@";
    cout << "\n@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@";
    cout << "\n@@@@@@@@@@@@@@@@@@@@@@@@@@=.....................................=@@@@@@@@@@@@@@@@@@@@@@@@";
    cout << "\n@@@@@@@@@@@@@@@@@@@@@@@@@@-                                     -@@@@@@@@@@@@@@@@@@@@@@@@";
    cout << "\n@@@@@@@@@@@@@@@@@@@@@@@@@@=.....................................=@@@@@@@@@@@@@@@@@@@@@@@@";
    for (int i = 0; i < 8; i++);
    {
        cout << "\n@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@";
    }
    Sleep(700);
    system("cls");
    for (int i = 0; i < 5; i++);
    {
        cout << "\n@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@";
    }
    cout << "\n@@@@@@@@@@@@@@@@@@@@@@@@@@=--------------------------------------=@@@@@@@@@@@@@@@@@@@@@@@";
    cout << "\n@@@@@@@@@@@@@@@@@@@@@@@@@@-                                      -@@@@@@@@@@@@@@@@@@@@@@@";
    cout << "\n@@@@@@@@@@@@@@@@@@@@@@@@@@=--------------------------------------=@@@@@@@@@@@@@@@@@@@@@@@";
    cout << "\n@@@@@@@@@@@@@@@@@@@@@@@@@@=--------------------------------------=@@@@@@@@@@@@@@@@@@@@@@@";
    cout << "\n@@@@@@@@@@@@@@@@@@@@@@@@@@-                                      -@@@@@@@@@@@@@@@@@@@@@@@";
    cout << "\n@@@@@@@@@@@@@@@@@@@@@@@@@@=--------------------------------------=@@@@@@@@@@@@@@@@@@@@@@@";
    cout << "\n@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@";
    cout << "\n@@@@@@@@@@@@@@@@@@@@@@@@@@       S y s t e m   l o a d i n g      @@@@@@@@@@@@@@@@@@@@@@@";
    cout << "\n@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@";
    cout << "\n@@@@@@@@@@@@@@@@@@@@@@@@@@=......................................=@@@@@@@@@@@@@@@@@@@@@@@";
    cout << "\n@@@@@@@@@@@@@@@@@@@@@@@@@@-                                      -@@@@@@@@@@@@@@@@@@@@@@@";
    cout << "\n@@@@@@@@@@@@@@@@@@@@@@@@@@=......................................=@@@@@@@@@@@@@@@@@@@@@@@";
    for (int i = 0; i < 8; i++);
    {
        cout << "\n@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@";
    }
    Sleep(1500);
    system("cls");
    for (int i = 0; i < 8; i++);
    for (int i = 0; i < 5; i++);
    {
        cout << "\n@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@";
    }
    cout << "\n@@@@@@@@@@@@@@@@@@@@@@@@@@=--------------------------------------=@@@@@@@@@@@@@@@@@@@@@@@";
    cout << "\n@@@@@@@@@@@@@@@@@@@@@@@@@@-                                      -@@@@@@@@@@@@@@@@@@@@@@@";
    cout << "\n@@@@@@@@@@@@@@@@@@@@@@@@@@=--------------------------------------=@@@@@@@@@@@@@@@@@@@@@@@";
    cout << "\n@@@@@@@@@@@@@@@@@@@@@@@@@@=--------------------------------------=@@@@@@@@@@@@@@@@@@@@@@@";
    cout << "\n@@@@@@@@@@@@@@@@@@@@@@@@@@-                                      -@@@@@@@@@@@@@@@@@@@@@@@";
    cout << "\n@@@@@@@@@@@@@@@@@@@@@@@@@@=--------------------------------------=@@@@@@@@@@@@@@@@@@@@@@@";
    cout << "\n@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@";
    cout << "\n@@@@@@@@@@@@@@@@@@@@@@@@@@     L o g i n   s u c c e s s f u l    @@@@@@@@@@@@@@@@@@@@@@@";
    cout << "\n@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@";
    cout << "\n@@@@@@@@@@@@@@@@@@@@@@@@@@=......................................=@@@@@@@@@@@@@@@@@@@@@@@";
    cout << "\n@@@@@@@@@@@@@@@@@@@@@@@@@@-                                      -@@@@@@@@@@@@@@@@@@@@@@@";
    cout << "\n@@@@@@@@@@@@@@@@@@@@@@@@@@=......................................=@@@@@@@@@@@@@@@@@@@@@@@";
    for (int i = 0; i < 8; i++);
    {
        cout << "\n@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@";
    }
    Sleep(2000);
};
int exit() {
    Sleep(3200);
    system("cls");
    cout << "                                                                                                                        \n";
    cout << "                                                                                                                        \n";
    cout << "                                                                                                                        \n";
    cout << "                                                                                                                        \n";
    cout << "                                                                                                                        \n";
    cout << "                                                                                                                        \n";
    cout << "                                                                                                                        \n";
    cout << "                                                                                                                        \n";
    cout << "                                                   конец игры                                                           \n";
    cout << "                                                                                                                        \n";
    cout << "                                                                                                                        \n";
    cout << "                                                                                                                        \n";
    cout << "                                                                                                                        \n";
    cout << "                                                                                                                        \n";
    cout << "                                                                                                                        \n";
    cout << "                                                                                                                        \n";
    cout << "                                                                                                                        \n";
    cout << "                                                                                                                        \n";
    cout << "          закрыть игру на крестик                                                                                       \n";
    cout << "                                                                                                                        \n";
    cout << "                                                                                                                        \n";
    cout << "                                                                                                                        \n";
    cout << "                                                                                                                        \n";
    cout << "                                                                                                                        \n";
    cout << "                                                                                                                        \n";
    cout << "                                                                                                                        \n";
    cout << "                                                                                                                        \n";
    cout << "TheNightHairen (2024)                                                    почта для обратной связи: nighthairen@gmail.com\n";
    return(0);
}
void exit1() {
    Sleep(3000);
    system("cls");
    cout << "Вау! Вы молодец! Вы смогли пройти через все вопросы!";
    cout << " Приходите к нам ещё, чтобы попробовать получить шанс поиграть в супер - игру, а с вами был всё ещё Кирилл Пожидаев, вы были на телепередаче \"Кто хочет стать миллионером\", и скоро увидимся в этом не самом прекрасном, но интернет-пространстве!";
    Sleep(7000);
    cout << "\n\n\n(Достижение разблокировано: конец?)";
    cout << "\n(Концовка - Вы - миллионер!)";
    Sleep(6000);
    system("cls");
};
int main()
{
    setlocale(LC_ALL, "Russian");
    srand(time(NULL));
    int mainmenustart, start, exit0, AchivementManager1, level2{}, random{};
    int  question1{}, question2{}, question3{}, question4{}, question5{}, question6{}, question7{}, question8{}, question9{}, question10{}, l2q1{}, l2q2{}, l2q3{}, l2q4{}, l2q5{};
    ctOS_LogonUI();
    system("cls");
    cout << "                                                                                                                        \n";
    cout << "                                                                                                                        \n";
    cout << "                                                                                                                        \n";
    cout << "                                                                                                                        \n";
    cout << "                                                                                                                        \n";
    cout << "                                                                                                                        \n";
    cout << "                                                                                                                        \n";
    cout << "                                            кто хочет стать миллионером                                                 \n";
    cout << "                                                                                                                        \n";
    cout << "                                                                                                                        \n";
    cout << "                                                                                                                        \n";
    cout << "                                                                                                                        \n";
    cout << "                                                                                                                        \n";
    cout << "                                                                                                                        \n";
    cout << "                                                                                                                        \n";
    cout << "                                                                                                                        \n";
    cout << "                                                                                                                        \n";
    cout << "          1 - начать игру                                                                 0 - выйти                     \n";
    cout << "          2 - получить информацию о достижениях                                                                         \n";
    cout << "                                                                                                                        \n";
    cout << "                                                                                                                        \n";
    cout << "                                                                                                                        \n";
    cout << "                                                                                                                        \n";
    cout << "                                                                                                                        \n";
    cout << "                                                                                                                        \n";
    cout << "                                                                                                                        \n";
    cout << "                                                                                                                        \n";
    cout << "                                                                                                                        \n";
    cout << "v 1.0                                                                                    copyright TheNightHairen (2024)\n";
    cin >> mainmenustart;
    switch (mainmenustart)
    {
    case 0:
        exit(0);
        break;
    case 1:
        system("cls");
        break;
    case 2:
        system("cls");
        cout << "Система достижений 1.0";
        Sleep(2000);
        system("cls");
        for (int i = 0; i <= 2; i++)
        {
            cout << "Загрузка систем";
            Sleep(900);
            cout << ".";
            Sleep(900);
            cout << ".";
            Sleep(900);
            cout << ".";
            Sleep(900);
            system("cls");
        }
        cout << "Загрузка систем";
        Sleep(900);
        cout << ".";
        Sleep(900);
        cout << ".";
        Sleep(900);
        system("cls");
        Sleep(900);
        cout << "подгрузка библиотек...";
        cout << "\n|||||";
        Sleep(1000);
        cout << "||||||||||||||||";
        Sleep(200);
        cout << "|||";
        Sleep(1000);
        cout << "|||||||||||";
        Sleep(2400);
        cout << "||||||||||||||||||";
        Sleep(1200);
        system("cls");
        for (int i = 0; i <= 2; i++)
        {
            cout << "Подключение к серверам";
            Sleep(900);
            cout << ".";
            Sleep(900);
            cout << ".";
            Sleep(900);
            cout << ".";
            Sleep(900);
            system("cls");
        }
        cout << "1.Достижения: \n1.1. ты проиграл, даже не начав - проиграйте в самом начале \n1.2. Зачем???? - зачем ты ввёл не те значения???? \n1.3. 1 к 4 - дойдите до этапа после ошибки \n1.4. Конец? - пройти игру на концовку миллионера";
        cout << "\n1.5. ядерка делать ба-бах - гугел угрожает нам бомбардировкой \n1.6. МИЛЛИАРДЕР!!!! - пройти игру с выполнением всех вопросов \n1.7. Ты был так близок... - допустить ошибку в дополнительной супер-игре \n1.8. Я надеюсь ты ОДИН такой? - тебе не стоило этого делать \n1.9. you'we been rickrolled! - never gonna give you up";
        cout << "\n\n2.Концовки: \n2.1. Земля тебе стекловатой - зачем???? \n2.2. Прикиньте, а это не снег - ядерка делать ба-бах, гугел не любить иоппл! \n2.3. Вы - миллионер! - пройти игру без доп. вопросов \n2.4. МИЛЛИАРДЕР!!! - пройти игру с доп. вопросами.";
        cout << "\n\n\nПерезапустите игру для продолжения";
        cin >> AchivementManager1;
        system("cls");
        exit(0);
        break;
    default:
        system("cls");
        cout << "Консоль управления предназначена для ввода ответов и чтения вопросов.";
        Sleep(1500);
        cout << "\nВыполняется команда принудительного выхода";
        Sleep(700);
        cout << ".";
        Sleep(700);
        cout << ".";
        Sleep(700);
        cout << ".";
        Sleep(3000);
        system("cls");
        Sleep(1000);
        exit(0);
    }


    cout << "ЗДРАВСТВУЙТЕ И ДОБРО ПОЖАЛОВАТЬ НА ШОУ \"КТО ХОЧЕТ СТАТЬ МИЛЛИОНЕРОМ\"!";
    cout << "\nПравила нашего шоу просты. Если вы отвечаете на вопрос правильно - вы проходите дальше. Если-же вы отвечаете неправильно - то покидаете наше шоу. Пользоваться интернетом запрещено, можно лишь получить маленькую подсказку (у разработчика)";
    cout << "\nИ так, все правила объяснены, все настройки настроены, но мне нужно спросить вас. Вы готовы?";
    cout << "\n(Варианты: 1 - да, 0 - нет): ";
    cin >> start;
    switch (start)
    {
    case 1:
        cout << "Я могу пожелать вам только удачи, ведь наше шоу начинается!";
        Sleep(5000);
        system("cls");
        break;
    case 0:
        cout << "\nЧто-же. Я могу только посоветовать вам набраться знаний, и с новыми силами возвращаться сюда. А вещал для вас сегодня Кирилл Пожидаев, и это было-бы шоу \"кто хочет стать миллионером\"!";
        Sleep(5000);
        system("cls");
        exit(0);
        break;
    default:
        cout << "\nИзвините, но консоль, которая была выдана вам, предназначена немного не для этого бреда! Сюда мы вводим номера вариантов ответов! Охрана, выведите его!";
        Sleep(300);
        cout << "\n(Достижение разблокировано: ты проиграл, даже не начав)";
        Sleep(5000);
        system("cls");
        exit(0);
        break;
    }

    cout << "Что-же, давайте приступим! И первый вопрос у нас...";
    Sleep(3000);
    cout << "\nКто является текущим генеральным директором Epic Games?";
    cout << "\nВарианты: \n1.Тим Суини \n2.RobTop \n3.Финикийцы \n4.Христофор Колумб\n";
    cin >> question1;
    switch (question1)
    {
    case 1:
        cout << "Разрешите свериться с таблицей ответов...";
        Sleep(3000);
        cout << " Очень хорошо! Вы правы! Тогда перейдём к следующему вопросу!";
        Sleep(3200);
        break;
    case 2:
        cout << "о нет!...";
        Sleep(3000);
        cout << " Нет! Он не был! Роберт Топала (Роберт Николас Кристиан Топала/РобТоп (да, я знаю, что я сильно душный:D) ) разрабатывает игры вообще-то!";
        Sleep(3200);
        exit(0);
        break;
    case 3:
        cout << "Ну-с... Они не являются!... в любом случае. Наверное. Тогда я объявляю Game over!";
        Sleep(3200);
        exit(0);
        break;
    case 4:
        cout << "посмотрим...";
        Sleep(3000);
        cout << " ну-с, мы тут не Америку исследуем! :D";
        Sleep(3200);
        exit(0);
        break;
    default:
        cout << "\nИзвините, но консоль, которая была выдана вам, предназначена немного не для этого бреда! Сюда мы вводим номера вариантов ответов! Охрана, выведите его!";
        Sleep(1000);
        cout << "\n(Достижение разблокировано: зачем????)";
        cout << "\n(Концовка - земля тебе стекловатой)";
        Sleep(3200);
        system("cls");
        exit(0);
        break;
    }

    Sleep(10000);
    system("cls");
    cout << "Первый вопрос был лёгким, да, но второй возможно заставит вас немного подумать...";
    Sleep(3000);
    cout << "\nКакой язык программирования был предшественником C++?";
    cout << "\nВарианты: \n1.Rust \n2.Python \n3.C \n4.C#\n";
    cin >> question2;
    switch (question2)
    {
    case 1:
        cout << "Чтож, это немного...";
        Sleep(3000);
        cout << " Ну, если быть честным.... вы СЛИШКОМ сильно промахнулись!";
        Sleep(3200);
        exit(0);
        break;
    case 2:
        cout << "ты чего наделал...";
        Sleep(3000);
        cout << " Компилятор и интерпритатор достаточно сильно различаются!";
        Sleep(3200);
        exit(0);
        break;
    case 3:
        cout << "вау...";
        Sleep(3000);
        cout << " Вы правы! C действительно является предшественником нашего любимого C++, на котором написана эта игра! Перейдём к следующему вопросу!";
        break;

    case 4:
        cout << "так...";
        Sleep(3000);
        cout << " нет. C# как раз является отвевлением C";
        Sleep(3200);
        exit(0);
        break;
    default:
        cout << "\nИзвините, но консоль, которая была выдана вам, предназначена немного не для этого бреда! Сюда мы вводим номера вариантов ответов! Охрана, выведите его!";
        Sleep(1000);
        cout << "\n(Достижение разблокировано: зачем????)";
        cout << "\n(Концовка - земля тебе стекловатой)";
        Sleep(3200);
        system("cls");
        exit(0);
        break;
    }

    Sleep(4600);
    system("cls");
    cout << "Вы отлично справляетесь! Но я уверен, что на этом вопросе вы ошибётесь! И третий вопрос у нас...";
    Sleep(3000);
    cout << "\nПочему стандартный браузер в Windows (Internet Explorer) называют ослом ";
    cout << "\nВарианты: \n1.Он слишком много тупит, как и все ослы на дороге, ахахахахахаха \n2.Произношение его сокращения звучит как звуки, издаваемые ослом. \n3.Это имя ему дало сообщество просто по приколу\n";
    cin >> question3;
    switch (question3)
    {
    case 1:
        cout << "Это...";
        Sleep(3000);
        cout << " Слишком неправильный ответ. Я его даже комментировать не буду. Гудбай, участник";
        Sleep(3200);
        exit(0);
        break;
    case 2:
        cout << "ох...";
        Sleep(3000);
        cout << " Я просто в шоке, что это вообще кто-то знает, ведь это правильно!";
        break;
    case 3:
        cout << "мой мозг обязательно выживет...";
        Sleep(3000);
        cout << " нет... ему сообщество по другой причине дало это имя";
        Sleep(3200);
        exit(0);
        break;
    default:
        cout << "\nИзвините, но консоль, которая была выдана вам, предназначена немного не для этого бреда! Сюда мы вводим номера вариантов ответов! Охрана, выведите его!";
        Sleep(1000);
        cout << "\n(Достижение разблокировано: зачем????)";
        cout << "\n(Концовка - земля тебе стекловатой)";
        Sleep(3200);
        system("cls");
        exit(0);
        break;
    }

    Sleep(3200);
    system("cls");
    cout << "чтож, вы дошли до четвёртого вопроса. Я уверен, что тут ваша игра и закончится!";
    Sleep(3000);
    cout << "\nсовместимы и заместимы ли системы Windows 9x и Windows NT?";
    cout << "\nВарианты: \n1.да, Windows 98 можно обновить в обратную сторону с Windows NT 4.0 и даже XP! \n2.Нет, их ядра слишком разные, из-за чего они несовместимы и не взаимозаместимы!\n3.Они взаимозаместимы только в одну сторону (с Windows 9X до WinXP)\n";
    cin >> question4;
    switch (question4)
    {
    case 1:
        cout << "ну...";
        Sleep(3000);
        cout << " К сожалению нет. Их ядра слишком разные, из-за чего вам просто начнут сыпать ошибками, если вы проведёте такую процедуру!";
        Sleep(3200);
        exit(0);
        break;
    case 2:
        cout << "ну...";
        Sleep(3000);
        cout << " К сожалению нет. Вы можете установить заместо Windows 95 установить систему Windows XP, так что, вот так вот!";
        Sleep(3200);
        exit(0);
        break;
    case 3:
        cout << "интересненько...";
        Sleep(3000);
        cout << " и ведь вы правы!";
        break;
    default:
        cout << "\nИзвините, но консоль, которая была выдана вам, предназначена немного не для этого бреда! Сюда мы вводим номера вариантов ответов! Охрана, выведите его!";
        Sleep(1000);
        cout << "\n(Достижение разблокировано: зачем????)";
        cout << "\n(Концовка - земля тебе стекловатой)";
        Sleep(3200);
        system("cls");
        exit(0);
        break;
    }

    Sleep(3200);
    system("cls");
    cout << "Вы слишком далеко продвинулись! Это уже половина пути! И ведь пятый вопрос - ...";
    Sleep(3000);
    cout << "\nНа какой операционной системе основана операционная система Android?";
    cout << "\nВарианты: \n1.На сильно модифицированном Linux с кучей ограничений \n2.Яблочная конторка там помогает в разработке, и специально систему хуже делает! \n3.Точно на семействе Windows NT! \n4.Там самострой от гугла\n";
    cin >> question5;
    switch (question5)
    {
    case 1:
        cout << "ПРАВИЛЬНО!";
        Sleep(3000);
        cout << " Да, вы правы! Тут даже root-права можно получить, как на лине!";
        break;
    case 2:
        cout << "(main: компилятор выдал ошибку... ";
        Sleep(3000);
        cout << "немедленно перезапустите программу, пока Google не взорвали наш офис!)";
        Sleep(2000);
        cout << "\n(Достижение разблокировано: ядерка делать ба-бах)";
        cout << "\n(Концовка - прикиньте, а это не снег!)";
        Sleep(3200);
        exit(0);
        break;
    case 3:
        cout << "нууууу....";
        Sleep(3000);
        cout << " Этот ответ слишком далёк от правды, но на андроид можно установить винду...";
        Sleep(2000);
        exit(0);
        break;
    case 4:
        cout << "аэаэааэаээа....";
        Sleep(3000);
        cout << " Сносим этот самострой!";
        Sleep(2000);
        exit(0);
        break;
    default:
        cout << "\nИзвините, но консоль, которая была выдана вам, предназначена немного не для этого бреда! Сюда мы вводим номера вариантов ответов! Охрана, выведите его!";
        Sleep(1000);
        cout << "\n(Достижение разблокировано: зачем????)";
        cout << "\n(Концовка - земля тебе стекловатой)";
        Sleep(3200);
        system("cls");
        exit(0);
        break;
    }

    Sleep(3200);
    system("cls");
    cout << "Я... в шоке. ШЕСТОЙ ВОПРОС, В СТУДИЮ!..";
    Sleep(3000);
    cout << "\nчто такое операционная система?";
    cout << "\nВарианты: \n1. Это комплекс программ, предназначенных для управления ресурсами компьютера и организации взаимодействия с пользователем \n2. Windows/Linux/Unix/MacOS/DOS \n3. Программное обеспечение, управляющее компьютерами и позволяющее запускать на них прикладные программы\n";
    cin >> question6;
    switch (question6)
    {
    case 1:
        cout << "ааааа....";
        Sleep(3000);
        cout << " Да!... почти!.....";
        Sleep(1000);
        cout << "я... засчитаю это, как правильный ответ!";
        Sleep(3200);
        break;
    case 2:
        cout << "...";
        Sleep(2000);
        cout << " Ну, как-бы да, но, как-бы, нет, но вообще вы правы, но отчасти неверно...";
        Sleep(3200);
        cout << "\n короче, вам защитан Game Over, потому что только этого ответа нет в списке правильных!";
        Sleep(3200);
        exit(0);
        break;
    case 3:
        cout << "чтож...";
        Sleep(3000);
        cout << " верно! Всё отлично! Идём дальше!";
        break;
    default:
        cout << "\nИзвините, но консоль, которая была выдана вам, предназначена немного не для этого бреда! Сюда мы вводим номера вариантов ответов! Охрана, выведите его!";
        Sleep(1000);
        cout << "\n(Достижение разблокировано: зачем????)";
        cout << "\n(Концовка - земля тебе стекловатой)";
        Sleep(3200);
        system("cls");
        exit(0);
        break;
    }

    Sleep(3200);
    system("cls");
    cout << "Возможно, седьмой вопрос станет для вас последним...";
    Sleep(3000);
    cout << "\nВнимание, вопрос от зрителя! Какой язык программирования является самым первым?";
    cout << "\nВарианты: \n1.FORTRAN \n2.Shortcode \n3.C \n4.Pascal \n5.Python\n";
    cin >> question7;
    switch (question7)
    {
    case 1:
        cout << "к сожалению...";
        Sleep(2000);
        cout << " Нет, вы не правы. FORTRAN появился в 1957 году, а shortcode в 1949. Вот такие пироги!";
        Sleep(2000);
        exit(0);
        break;
    case 2:
        cout << "ура!...";
        Sleep(2000);
        cout << " вы правы! ShortCode один из первых языков программирования высокого уровня из когда-либо разрабатывавшихся для вычислительных машин, и появился он в 1949 году!";
        break;
    case 3:
        cout << "ну...";
        Sleep(3000);
        cout << " No, i hate that thing...";
        Sleep(2000);
        exit(0);
        break;
    case 4:
        cout << "ну-с...";
        Sleep(2000);
        cout << " 1972 год... вы поняли";
        Sleep(2000);
        exit(0);
        break;
    case 5:
        cout << "не совсем....";
        Sleep(2000);
        cout << " он вышел достаточно поздно, в 1991 году.";
        Sleep(2000);
        exit(0);
        break;
    default:
        cout << "\nИзвините, но консоль, которая была выдана вам, предназначена немного не для этого бреда! Сюда мы вводим номера вариантов ответов! Охрана, выведите его!";
        Sleep(1000);
        cout << "\n(Достижение разблокировано: зачем????)";
        cout << "\n(Концовка - земля тебе стекловатой)";
        Sleep(2000);
        system("cls");
        exit(0);
        break;
    }

    Sleep(3200);
    system("cls");
    cout << "На восьмом вопросе вы, возможно, вы и проиграете!...";
    Sleep(3000);
    cout << "\nДля чего в смартфонах блокируют загрузчик?";
    cout << "\nВарианты: \n1.Чтобы пользователь не влез в системные файлы \n2.Чтобы пользователь не брикнул телефон \n3.Специально, чтобы пользователь не получил root-права \n4.В целях безопасности пользователя\n";
    cin >> question8;
    switch (question8)
    {
    case 1:
        cout << "смотрим...";
        Sleep(1000);
        cout << " не совсем... они не хотят, чтобы пользователь установил какой-нибудь вирус, который убьёт полностью загрузчик";
        Sleep(3200);
        exit(0);
        break;
    case 2:
        cout << "сейчас...";
        Sleep(1000);
        cout << " нет, ну, вернее да, но только Huawei, чтоб им пусто было...";
        Sleep(3200);
        exit(0);
        break;
    case 3:
        cout << "дайте-ка взглянуть...";
        Sleep(1000);
        cout << " ну, нет, но, вернее, да, некоторые. Наверное";
        Sleep(3200);
        exit(0);
        break;
    case 4:
        cout << "Сейчас взглянем...";
        Sleep(1000);
        cout << " да, вы правы, они ограничивают разблокировку загрузчика именно в целях безопасности";
        Sleep(3200);
        break;
    default:
        cout << "\nИзвините, но консоль, которая была выдана вам, предназначена немного не для этого бреда! Сюда мы вводим номера вариантов ответов! Охрана, выведите его!";
        Sleep(1000);
        cout << "\n(Достижение разблокировано: зачем????)";
        cout << "\n(Концовка - земля тебе стекловатой)";
        Sleep(3200);
        system("cls");
        exit(0);
        break;
    }

    Sleep(3200);
    system("cls");
    cout << "предпоследний вопрос, сейчас будет жёстко...";
    Sleep(3000);
    cout << "\nДля чего в Windows установлен bitlocker?";
    cout << "\nВарианты: \n1.Шифрование данных на диске \n2.Удаление данных с диска \n3.Переустановка Windows\n";
    cin >> question9;
    switch (question9)
    {
    case 1:
        cout << "иии...";
        Sleep(1000);
        cout << " Да! Всё верно. Пока активен Bitlocker, вас система даже не подпустит к данным, да и форматировать ничего не получится!";
        Sleep(3200);
        break;
    case 2:
        cout << "таак...";
        Sleep(1000);
        cout << " вам как раз не даст этого сделать сам Bitlocker, ведь это технология шифрования данных!";
        Sleep(3200);
        exit(0);
        break;
    case 3:
        cout << "ну неет....";
        Sleep(1000);
        cout << " вам bitlocker этого как раз сделать и не даст!";
        Sleep(3200);
        exit(0);
        break;
    default:
        cout << "\nИзвините, но консоль, которая была выдана вам, предназначена немного не для этого бреда! Сюда мы вводим номера вариантов ответов! Охрана, выведите его!";
        Sleep(1000);
        cout << "\n(Достижение разблокировано: зачем????)";
        cout << "\n(Концовка - земля тебе стекловатой)";
        Sleep(3200);
        system("cls");
        exit(0);
        break;
    }

    Sleep(3200);
    system("cls");
    cout << "вы дошли до последнего вопроса. Вы молодец. А теперь, осталось лишь ответить правильно...";
    Sleep(3000);
    cout << "\nКак работает экосистема Apple";
    cout << "\nВарианты: \n1.Чёрная магия, а яблочная конторка - колдун кое-какой. \n2.Через интернет всё закидывается на сервера Apple и потом можно перенести с серверов на другое устройство \n3.Вся система построена на облаке\n";
    cin >> question10;
    switch (question10)
    {
    case 1:
        cout << "о-оу...";
        Sleep(1000);
        cout << " бро не в моде походу.... а вообще там всё работает на облаке...";
        Sleep(3200);
        exit(0);
        break;
    case 2:
        cout << "а я вот что скажу...";
        Sleep(1000);
        cout << " ну, да, вы правы, это более подробный вариант, а можно еще выбрать попроще - через облако!";
        Sleep(3200);
        break;
    case 3:
        cout << "meh...";
        Sleep(1000);
        cout << " ну, вообще да. А можно более длинный выбрать";
        Sleep(3200);
        break;
    default:
        cout << "\nИзвините, но консоль, которая была выдана вам, предназначена немного не для этого бреда! Сюда мы вводим номера вариантов ответов! Охрана, выведите его!";
        Sleep(1000);
        cout << "\n(Достижение разблокировано: зачем????)";
        cout << "\n(Концовка - земля тебе стекловатой)";
        Sleep(3200);
        system("cls");
        exit(0);
        break;
    }

    random = rand() % 3;
    switch (random)
    {
    case 0:
        cout << exit1;
        cout << exit();
        cin >> exit0;
        exit(0);
        break;
    case 1:
        cout << exit1;
        cout << exit();
        cin >> exit0;
        exit(0);
        break;
    case 2:
        ctOS_LogonUI();
        system("cls");
        cout << "(получено достижение: 1 к 4)";
        cout << "\nвау! Вам выпал шанс поиграть в супер игру!";
        Sleep(3000);
        cout << " Правила остаются теми-же, но немного дополняются. Есть ещё один набор вопросов повышенной сложности, но тут они уже на разные темы, то есть не только IT.";
        Sleep(4500);
        cout << "\nВы согласны? \n(1 - да, 0 - нет)\n";
        cin >> level2;
        switch (level2)
        {
        case 1:
            cout << "что-же, тогда добро пожаловать в супер-игру! Я верю в вас!";
            Sleep(2300);
            system("cls");
            cout << "И так, внимание, первый вопрос второго уровня!...";
            Sleep(2000);
            cout << "\nКак найти сопротивление силы тока в цепи?";
            cout << "\nВарианты: \n1. R = " << "\u0070 * l / S\n2. U = I*R" << endl;
            cout << "3. I = U*R\n";
            cin >> l2q1;
            switch (l2q1)
            {
            case 1:
                cout << "ну-с, посмотрим...";
                Sleep(3000);
                cout << "да! Всё верно! Я рад, что вы смогли пройти через первый вопрос повышенной сложности! Идём дальше!";
                Sleep(3200);
                break;
            case 2:
                cout << "тээээк...";
                Sleep(3000);
                cout << " ну... это... напряжение";
                Sleep(1000);
                cout << "\n(достижение разблокировано: ты был так близок...)";
                Sleep(3200);
                exit(0);
                break;
            case 3:
                cout << "иопл...";
                Sleep(3000);
                cout << " Эт......то сила токаэээээээээ... дааааа...";
                Sleep(1000);
                cout << "\n(достижение разблокировано: ты был так близок...)";
                Sleep(3200);
                exit(0);
                break;
            default:
                cout << "\nИзвините, но консоль, которая была выдана вам, предназначена немного не для этого бреда! Сюда мы вводим номера вариантов ответов! Охрана, выведите его!";
                Sleep(1000);
                cout << "\n(достижение разблокировано: ты был так близок...)";
                cout << "\n(Достижение разблокировано: зачем????)";
                cout << "\n(Концовка - земля тебе стекловатой)";
                Sleep(3200);
                system("cls");
                exit(0);
                break;
            }

            Sleep(3200);
            system("cls");
            cout << "Второй вопрос второго уровня, на котором, возможно, вы застрянете надолго...";
            Sleep(3000);
            cout << "\nWho are you, Aiden?";
            Sleep(500);
            ctOS_ConnectionError();
            Sleep(3200);
            system("cls");
            cout << "Второй вопрос второго уровня, на котором, возможно, вы застрянете надолго...";
            Sleep(3000);
            cout << "\nгоды жизни Петра I - ...";
            cout << "\nВарианты: \n1. 23 октября 1715 г. – 30 января 1730 г. \n2. 7 февраля 1693 г. – 28 октября 1740 г. \n3. 9 июня 1672 г. – 8 февраля 1725 г. \n4. 25 августа 1530 г. – 28 марта 1584 г.\n";
            cin >> l2q2;
            switch (l2q2)
            {
            case 2:
                cout << "сейчас дам ответ...";
                Sleep(1000);
                cout << " К сожалению, вы неправы. Это Анна Иоановна";
                Sleep(1000);
                cout << "\n(достижение разблокировано: ты был так близок...)";
                Sleep(3200);
                exit(0);
                break;
            case 1:
                cout << "не тот...";
                Sleep(1000);
                cout << " это Пётр II. А ведь вы были близки к правильному ответу!";
                Sleep(1000);
                cout << "\n(достижение разблокировано: ты был так близок...)";
                Sleep(3200);
                exit(0);
                break;
            case 3:
                cout << "и так...";
                Sleep(1000);
                cout << " да, вы правы, идём дальше";
                Sleep(3200);
                break;
            case 4:
                cout << "не-не-не...";
                Sleep(1000);
                cout << " это Иван IV (4) Грозный!";
                Sleep(1000);
                cout << "\n(достижение разблокировано: ты был так близок...)";
                Sleep(3200);
                exit(0);
                break;
            default:
                cout << "\nИзвините, но консоль, которая была выдана вам, предназначена немного не для этого бреда! Сюда мы вводим номера вариантов ответов! Охрана, выведите его!";
                Sleep(1000);
                cout << "\n(достижение разблокировано: ты был так близок...)";
                cout << "\n(Достижение разблокировано: зачем????)";
                cout << "\n(Концовка - земля тебе стекловатой)";
                Sleep(3200);
                system("cls");
                exit(0);
                break;
            }

            Sleep(3200);
            system("cls");
            cout << "уже 60% пути пройдено, но дальше только труднее...";
            Sleep(3000);
            cout << "\nЧто такое рикролл?";
            cout << "\nВарианты: \n1. Never gonna give you up \n2. Прикольная песенка, которую мне скинули в дискорде в ЛС \n3. розыгрыш, заключающийся в предоставлении жертве гиперссылки на видео\n";
            cin >> l2q3;
            switch (l2q3)
            {
            case 1:
                cout << "Never gonna let you down";
                Sleep(2100);
                cout << "\nNever gonna run around";
                Sleep(2000);
                cout << "\nAnd desert you";
                Sleep(1650);
                cout << "\nNever gonna make you cry";
                Sleep(1940);
                cout << "\nNever gonna say goodbye";
                Sleep(1990);
                cout << "\nNever gonna tell a lie";
                Sleep(2150);
                cout << "\nAnd hurt you";
                Sleep(2000);
                cout << "\n\n\n\n\n(достижение разблокировано: ты был так близок...)";
                cout << "\n(достижение разблокировано: you'we been rickrolled!)";
                Sleep(3200);
                exit(0);
                break;
            case 2:
                cout << "я...";
                Sleep(1000);
                cout << " поздравляю вас, ведь вы были зарикроллены раньше, чем это сделал я... :(";
                Sleep(1000);
                cout << "\n(достижение разблокировано: you'we been rickrolled!)";
                Sleep(3200);
                exit(0);
                break;
            case 3:
                cout << "я думаю...";
                Sleep(1000);
                cout << " что абсолютно все знают этот интернет мем! Так что продолжаем.";
                Sleep(3200);
                break;
            default:
                cout << "\nИзвините, но консоль, которая была выдана вам, предназначена немного не для этого бреда! Сюда мы вводим номера вариантов ответов! Охрана, выведите его!";
                Sleep(1000);
                cout << "\n(достижение разблокировано: ты был так близок...)";
                cout << "\n(Достижение разблокировано: зачем????)";
                cout << "\n(Концовка - земля тебе стекловатой)";
                Sleep(3200);
                system("cls");
                exit(0);
                break;
            }

            Sleep(3200);
            system("cls");
            cout << "осталось 20% до конца супер-игры! Миссия становится всё более невыполнимой!";
            Sleep(3000);
            cout << "\nДля чего на автомобиль устанавливают спойлер?";
            cout << "\nВарианты: \n1. Ради красоты, чтобы выглядела красиво, я это из игр знаю! \n2. Ради повышения аэродинамических свойств кузова \n3. Чтобы машина ехала медленне\n";
            cin >> l2q4;
            switch (l2q4)
            {
            case 1:
                cout << "не все...";
                Sleep(1000);
                cout << " в основном их вешают ради улучшения аэродинамических свойств автомобиля, чтобы авто прижималось к земле лучше...";
                Sleep(1000);
                cout << "\n(достижение разблокировано: ты был так близок...)";
                Sleep(3200);
                exit(0);
                break;
            case 2:
                cout << "я с вами согласен...";
                Sleep(1000);
                cout << " да! Вы полностью правы. Переходим к последнему вопросу.";
                Sleep(3200);
                break;
            case 3:
                cout << "в играх слышали?...";
                Sleep(1000);
                cout << " что за бред?";
                Sleep(1000);
                cout << "\n(достижение разблокировано: ты был так близок...)";
                Sleep(3200);
                exit(0);
                break;
            default:
                cout << "\nИзвините, но консоль, которая была выдана вам, предназначена немного не для этого бреда! Сюда мы вводим номера вариантов ответов! Охрана, выведите его!";
                Sleep(1000);
                cout << "\n(достижение разблокировано: ты был так близок...)";
                cout << "\n(Достижение разблокировано: зачем????)";
                cout << "\n(Концовка - земля тебе стекловатой)";
                Sleep(3200);
                system("cls");
                exit(0);
                break;
            }

            Sleep(3200);
            system("cls");
            cout << "Чтож, я поздравляю вас. Вы в конце пути. Остался последний вопрос!...";
            Sleep(3000);
            cout << "\nКак выглядит правильная запись гидроксида лития?";
            cout << "\nВарианты: \n1. 2LiH2O \n2. LiH2 \n3. 2LiOH \n4. LiOH\n";
            cin >> l2q5;
            switch (l2q5)
            {
            case 1:
                cout << "\nвообще-то это...";
                Sleep(1000);
                cout << " уравнение 2LiH2O = 2LiOH + H2... к сожалению...";
                Sleep(1000);
                cout << "\n(достижение разблокировано: ты был так близок...)";
                Sleep(3200);
                exit(0);
                break;
            case 2:
                cout << "\nчто-же...";
                Sleep(1000);
                cout << " Вы проиграли, ведь это гидрид лития, а жаль, вы были слишком близки!";
                Sleep(1000);
                cout << "\n(достижение разблокировано: ты был так близок...)";
                Sleep(3200);
                exit(0);
                break;
            case 3:
                cout << "\nЭто тоже...";
                Sleep(1000);
                cout << " просто очередное уравнение... слишком долго вы шли, но не смогли дойти, а жаль!";
                Sleep(1000);
                cout << "\n(достижение разблокировано: ты был так близок...)";
                Sleep(3200);
                exit(0);
                break;
            case 4:
                cout << "УРА!...";
                Sleep(2000);
                cout << " У НАС НАКОНЕЦ-ТО, СПУСТЯ СТОЛЬКО ЛЕТ ПОЯВИЛСЯ ПОБЕДИТЕЛЬ!";
                Sleep(2000);
                cout << "\nВ нашей виртуальной студии все чувствовали себя как-то плохо, один из предыдущих запусков был провалом!";
                Sleep(3000);
                cout << "\nНо я рад, что у нас появился победитель!";
                Sleep(3200);
                break;
            default:
                cout << "\nИзвините, но консоль, которая была выдана вам, предназначена немного не для этого бреда! Сюда мы вводим номера вариантов ответов! Охрана, выведите его!";
                Sleep(1000);
                cout << "\n(достижение разблокировано: ты был так близок...)";
                cout << "\n(Достижение разблокировано: зачем????)";
                cout << "\n(Концовка - земля тебе стекловатой)";
                Sleep(3200);
                system("cls");
                exit(0);
                break;
            }
            Sleep(3000);
            system("cls");
            cout << "И так, повдедём итоги за сегодня!";
            Sleep(1000);
            cout << "\nВы прошли все испытания на отлично! Ответили на все вопросы правильно, прошли даже дополнительную часть, которая была не обязательной!";
            Sleep(3200);
            cout << "\nЯ поздравляю вас с победой, а вам зрители, я снова повторю...";
            Sleep(2500);
            cout << "\nВы были на шоу \"Кто хочет стать миллионером\", с вами был самый обычный ведущий Кирилл Пожидаев, и увидимся с вами ещё ";
            Sleep(700);
            cout << "в интернет-";
            Sleep(700);
            cout << "пространстве!";
            Sleep(5000);
            cout << "\n\n\n(Достижение разблокировано: МИЛЛИАРДЕР!!!!)";
            cout << "\n(Концовка - МИЛЛИАРДЕР!!!)";
            Sleep(6000);
            system("cls");
            cout << exit();
            cin >> exit0;
        case 0:
            system("cls");
            cout << "тогда я поздравляю вас с вашим миллионом, и удачи! А с вами был всё ещё Кирилл Пожидаев, вы были на телепередаче \"Кто хочет стать миллионером\", и скоро увидимся в этом не самом прекрасном, но интернет-пространстве!";
            cout << "\n\n\n(Достижение разблокировано: конец?)";
            cout << "\n(Концовка - Вы - миллионер!)";
            Sleep(7000);
            system("cls");
            cout << exit();
            cin >> exit0;
            exit(0);
            break;
        default:
            cout << "чивооооо? Что вы несёте!? я прошу нормально ответ сказать, а не бред нести!";
            Sleep(1000);
            cout << "\n(Достижение разблокировано: Я надеюсь ты ОДИН такой?)";
            cout << "\n(Достижение разблокировано: зачем????)";
            cout << "\n(Концовка - земля тебе стекловатой)";
            Sleep(3200);
            system("cls");
            exit(0);
            break;
        }
    case 3:
        cout << exit1;
        cout << exit();
        cin >> exit0;
        exit(0);
        break;
    default:
        cout << exit1;
        cout << exit();
        cin >> exit0;
        exit(0);
        break;
    }
}
